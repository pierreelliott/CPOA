/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import Controleur.Planning;
import Modele.DAO.BDD;
import Modele.Métier.Projection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author p1402690
 */
public class AffichageTest extends javax.swing.JFrame {

    /**
     * Creates new form AffichageTest
     */
    public AffichageTest() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        try {
            BDD.chargerBDD();
        } catch (SQLException ex) {
            Logger.getLogger(GestionAffichageCalendrier.class.getName()).log(Level.SEVERE, null, ex);
            String ERREUR = "La connexion à la Base de données a échouée";
            JOptionPane.showMessageDialog(null, ERREUR, "Erreur !", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MAJAffichage = new javax.swing.JButton();
        GenerationPlanning = new javax.swing.JButton();
        AjoutProjection = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MAJAffichage.setText("Mettre à jour l'affichage");
        MAJAffichage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MAJAffichageActionPerformed(evt);
            }
        });

        GenerationPlanning.setText("Générer planning");
        GenerationPlanning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerationPlanningActionPerformed(evt);
            }
        });

        AjoutProjection.setText("Ajouter projection");
        AjoutProjection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjoutProjectionActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NumProjection", "Titre film", "Date déut", "Durée"
            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setMinimumSize(new java.awt.Dimension(80, 0));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton1.setText("Mettre à jour BD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GenerationPlanning)
                    .addComponent(MAJAffichage)
                    .addComponent(AjoutProjection)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(MAJAffichage)
                        .addGap(18, 18, 18)
                        .addComponent(GenerationPlanning)
                        .addGap(18, 18, 18)
                        .addComponent(AjoutProjection)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MAJAffichageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MAJAffichageActionPerformed
        DefaultTableModel modele = (DefaultTableModel)jTable1.getModel();
        
        for(Projection p : listProjections)
        {
            modele.addRow(new Object[] {p.getNumProjection(), p.getFilm().getTitreFilm(), p.getDate(), p.getFilm().getDuree()});
        }
    }//GEN-LAST:event_MAJAffichageActionPerformed

    private void GenerationPlanningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerationPlanningActionPerformed
        JOptionPane option = new JOptionPane();
        int statut = JOptionPane.showConfirmDialog(null, "La génération automatique écrase toutes les projections précédemment placées !\nCliquez sur OK pour continuer", "Attention !", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        if (statut == JOptionPane.OK_OPTION) {
            //Demander le paramétrage de la génération automatique
            Projection.setProjections(Planning.genererPlanningAutomatique(new Date()));
            listProjections = Projection.getProjections();
            try {
                for (Projection p : listProjections) {
                    System.out.println("Projection : " + p.getFilm().getTitreFilm());
                }
                JOptionPane.showMessageDialog(null, "Planning généré", "Génération automatique", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                Logger.getLogger(GestionAffichageCalendrier.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        MAJAffichageActionPerformed(evt);
    }//GEN-LAST:event_GenerationPlanningActionPerformed

    private void AjoutProjectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjoutProjectionActionPerformed
        Projection proj = null;
        ZDialog diag = new ZDialog(null, "Ajouter une projection", true);
        boolean spro = diag.showZDialog();

        if (spro) {
            proj = new Projection(Projection.getMaxNum(), 14, 3, new Date());
            try {
                System.out.println("Insertion projection pour le film : " + proj.getFilm().getTitreFilm());
                BDD.projectionBD(proj);
                Projection.add(proj);
                //model.mettreAJour();
                JOptionPane.showMessageDialog(null, "Projection insérée", "Création projection", JOptionPane.INFORMATION_MESSAGE);
                System.out.println("Ajout projection");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erreur lors de l'ajout de la projection", "Création projection", JOptionPane.WARNING_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erreur lors de l'ajout de la projection", "Création projection", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Création d'un projection annulée", "Annulation", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_AjoutProjectionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            BDD.MAJBD();
        } catch (SQLException ex) {
            Logger.getLogger(AffichageTest.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AffichageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AffichageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AffichageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AffichageTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AffichageTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AjoutProjection;
    private javax.swing.JButton GenerationPlanning;
    private javax.swing.JButton MAJAffichage;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    private List<Projection> listProjections = new ArrayList<>();
}
